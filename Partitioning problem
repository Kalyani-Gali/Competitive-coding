#include <bits/stdc++.h>
using namespace std;
bool partition(int arr[], int n)
{
    int sum = 0;
    for (int i = 0; i < n; i++)
    {
        sum += arr[i];
    }
    if (sum % 2 == 1) // If sum is odd => we can’t divide the sum into two parts
        return false;

    int W = sum / 2;
    bool dp[n + 1][W + 1];
    for (int i = 0; i <= n; i++)
    {
        for (int w = 0; w <= W; w++)
        {
            if (i == 0 || w == 0) // Base Case
                dp[i][w] = true;
            else if (arr[i – 1] > w) // We cannot include ith item
                dp[i][w] = dp[i – 1][w];
            else // We can include ith item
                dp[i][w] = dp[i – 1][w – arr[i – 1]] || dp[i – 1][w];
        }
    }
    return dp[n][W];
}

int main()
{
    int n = 6;
    int arr[n] = {1, 5, 1, 2, 3, 2};

    if (partition(arr, n))
        cout << “Yes” << endl;
    else
        cout << “No” << endl;

    return 0;
}
